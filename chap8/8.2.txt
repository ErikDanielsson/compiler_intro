8.2.3
Exercises for Section 8.2
Exercise 8.2.1 : Generate code for the following three-address statements
as­suming all variables are stored in memory locations.
a ) x = 1
    LD R1, 1
    LD x, R1
b ) x = a
    LD R1, a
    LD x, R1
c ) x = a + 1
    LD R1, a
    ADD R1, R1, 1
    LD x, R1
d ) x = a + b
    LD R1, a
    ADD R1, R1, b
    LD x, R1
e ) The two statements
    x = b * c
    y = a + x
    LD R1, b
    LD R2, c
    MUL R1, R1, R2
    LD x, R1
    ADD R1, a
    LD y, R1

Exercise 8.2.2 : Generate code for the following three-address statements
as­suming a and b are arrays whose elements are 4-byte values.
a ) The four-statement sequence
    x = a[i]
    y = b[j]
    a[i] = y
    b[j] = x

    LD R1, a
    LD R2, i(R1)
    LD x, R2
    LD R3, b
    LD R4, j(R1)
    LD y, R4
    LD i(R1), R4
    Ld j(R3), R2

b) The three-statement sequence
    x = a[i]
    b[i] = y
    z = x * y

    LD R1, a
    LD R2, i(R1)
    LD x, R2
    LD R1, b
    LD y, i(R1)
    MUL z, R2, y

c) The three-statement sequence
    x = a[i]
    y = b[x]
    a[i] = y

    LD R1, a
    LD R2, i(R1)
    LD x, R2
    LD R3, b
    LD R4, R2(R3)
    LD y, R4
    LD i(a), R4


Exercise 8.2.3 : Generate code for the following three-address sequence
as­suming that p and q are in memory locations:
    y = *q
    q = q + 4
    *p = y
    p = p + 4

    LD R1, q
    LD R2, 0(R1)
    LD y, R2
    ADD q, R1, 4
    LD R3, p
    LD 0(R3), R2
    ADD p, R3, 4

Exercise 8.2.4 : Generate code for the following sequence assuming that x, y,
and z are in memory locations:
        if x < y goto L1
        z = 0
        goto L2
    L1: z = 1

        LD R1, x
        LD R2, y
        SUB R1, R1, R2
        BLTZ R1, L1
        ST z, 0
        BR L2
    L1: ST z, 1



Exercise 8.2.5 : Generate code for the following sequence assuming hat n is
in a memory location:
= °
i = °
L 1 : if i > n goto L2
s = s + i
i
i + 1
goto L 1
L2 :
s
=
Exercise 8.2.6 : Determine the costs of the following instruction sequences:
nope
a)
    LD  R0, y
    LD  R1, z
    ADD R0, R0, R1
    ST  x, R0


b)
    LD  R0, i
    MUL R0, R0, 8
    LD  R1, 0(R0)
    ST  b, R1
c)
    LD  R0, c
    LD  R1, i
    MUL R1, R1, 8
    ST  a(R1), R0
d)
    LD  R0, p
    R1  R1, 0(R0)
    ST  x,  R1
