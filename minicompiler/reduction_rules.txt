(1) compound_statement -> compound_statement statement
(2) compound_statement -> statement
(3) statement -> variable_declaration ';'
(4) statement -> function_declaration
(5) statement -> assignment_statement ';'
(6) statement -> function_call ';'
(7) statement -> if_elif_else_statement
(8) statement -> while_loop
(9) statement -> for_loop
(10) statement -> scope
(11) statement -> return_statement ';'
(12) variable_declaration -> 'ID' indices 'ID'
(13) variable_declaration -> 'ID' indices 'ID' '=' expr
(14) variable_declaration -> 'ID' 'ID'
(15) variable_declaration -> 'ID' 'ID' '=' expr
(16) function_declaration -> 'DEFINE' 'ID' empty_indices 'ID' '(' params ')' '{' compound_statement '}'
(17) function_declaration -> 'DEFINE' 'ID' empty_indices 'ID' '(' ')' '{' compound_statement '}'
(18) function_declaration -> 'DEFINE' 'ID' 'ID' '(' params ')' '{' compound_statement '}'
(19) function_declaration -> 'DEFINE' 'ID' 'ID' '(' ')' '{' compound_statement '}'
(20) empty_indices -> empty_indices '[' ']'
(21) empty_indices -> '[' ']'
(22) params -> params ',' variable_declaration
(23) params -> variable_declaration
(24) indices -> indices '[' expr ']'
(25) indices -> '[' expr ']'
(26) indices -> indices '[' ']'
(27) indices -> '[' ']'
(28) variable_access -> 'ID'
(29) variable_access -> 'ID' indices
(30) expr -> expr '-' expr
(31) expr -> expr '+' expr
(32) expr -> expr '/' expr
(33) expr -> expr '%' expr
(34) expr -> expr '*' expr
(35) expr -> expr '^' expr
(36) expr -> '(' expr ')'
(37) expr -> 'ICONST'
(38) expr -> 'FCONST'
(39) expr -> 'SCONST'
(40) expr -> variable_access
(41) expr -> function_call
(42) expr -> '+' expr
(43) expr -> '-' expr
(44) assignment_statement -> variable_access 'ASSIGN' expr
(45) assignment_statement -> variable_access '=' expr
(46) assignment_statement -> variable_access 'SUFFIXOP'
(47) function_call -> 'ID' '(' args ')'
(48) function_call -> 'ID' '(' ')'
(49) args -> args ',' expr
(50) args -> expr
(51) if_elif_else_statement -> if_statement
(52) if_elif_else_statement -> if_statement elif_list
(53) elif_list -> elif_statement elif_list
(54) elif_list -> elif_statement
(55) elif_list -> else_statement
(56) if_statement -> 'IF' b_expr '{' compound_statement '}'
(57) elif_statement -> 'ELIF' b_expr '{' compound_statement '}'
(58) else_statement -> 'ELSE' '{' compound_statement '}'
(59) while_loop -> 'WHILE' b_expr '{' compound_statement '}'
(60) for_loop -> 'FOR' variable_declaration ',' b_expr ',' assignment_statement '{' compound_statement '}'
(61) for_loop -> 'FOR' assignment_statement ',' b_expr ',' assignment_statement '{' compound_statement '}'
(62) b_expr -> b_expr 'NAND' b_expr
(63) b_expr -> '(' b_expr 'NAND' b_expr ')'
(64) b_expr -> r_expr
(65) b_expr -> '(' b_expr ')'
(66) r_expr -> expr 'RELOP' expr
(67) r_expr -> expr
(68) scope -> '{' compound_statement '}'
(69) return_statement -> 'RETURN' expr
